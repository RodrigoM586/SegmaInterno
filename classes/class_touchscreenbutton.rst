.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TouchScreenButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TouchScreenButton:

TouchScreenButton
=================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Button for touch screen devices.

Properties
----------

+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`String<class_String>`                                  | :ref:`action<class_TouchScreenButton_property_action>`                   |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`BitMap<class_BitMap>`                                  | :ref:`bitmask<class_TouchScreenButton_property_bitmask>`                 |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                                | :ref:`normal<class_TouchScreenButton_property_normal>`                   |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                      | :ref:`passby_press<class_TouchScreenButton_property_passby_press>`       |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                                | :ref:`pressed<class_TouchScreenButton_property_pressed>`                 |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`Shape2D<class_Shape2D>`                                | :ref:`shape<class_TouchScreenButton_property_shape>`                     |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                      | :ref:`shape_centered<class_TouchScreenButton_property_shape_centered>`   |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                      | :ref:`shape_visible<class_TouchScreenButton_property_shape_visible>`     |
+--------------------------------------------------------------+--------------------------------------------------------------------------+
| :ref:`VisibilityMode<enum_TouchScreenButton_VisibilityMode>` | :ref:`visibility_mode<class_TouchScreenButton_property_visibility_mode>` |
+--------------------------------------------------------------+--------------------------------------------------------------------------+

Methods
-------

+-------------------------+--------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_pressed<class_TouchScreenButton_method_is_pressed>` **(** **)** const |
+-------------------------+--------------------------------------------------------------------------------+

Signals
-------

.. _class_TouchScreenButton_signal_pressed:

- **pressed** **(** **)**

Emitted when the button is pressed (down).

.. _class_TouchScreenButton_signal_released:

- **released** **(** **)**

Emitted when the button is released (up).

Enumerations
------------

.. _enum_TouchScreenButton_VisibilityMode:

.. _class_TouchScreenButton_constant_VISIBILITY_ALWAYS:

.. _class_TouchScreenButton_constant_VISIBILITY_TOUCHSCREEN_ONLY:

enum **VisibilityMode**:

- **VISIBILITY_ALWAYS** = **0** --- Always visible.

- **VISIBILITY_TOUCHSCREEN_ONLY** = **1** --- Visible on touch screens only.

Description
-----------

Button for touch screen devices. You can set it to be visible on all screens, or only on touch devices.

Property Descriptions
---------------------

.. _class_TouchScreenButton_property_action:

- :ref:`String<class_String>` **action**

+----------+-------------------+
| *Setter* | set_action(value) |
+----------+-------------------+
| *Getter* | get_action()      |
+----------+-------------------+

The button's action. Actions can be handled with :ref:`InputEventAction<class_InputEventAction>`.

.. _class_TouchScreenButton_property_bitmask:

- :ref:`BitMap<class_BitMap>` **bitmask**

+----------+--------------------+
| *Setter* | set_bitmask(value) |
+----------+--------------------+
| *Getter* | get_bitmask()      |
+----------+--------------------+

The button's bitmask.

.. _class_TouchScreenButton_property_normal:

- :ref:`Texture<class_Texture>` **normal**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

The button's texture for the normal state.

.. _class_TouchScreenButton_property_passby_press:

- :ref:`bool<class_bool>` **passby_press**

+----------+---------------------------+
| *Setter* | set_passby_press(value)   |
+----------+---------------------------+
| *Getter* | is_passby_press_enabled() |
+----------+---------------------------+

If ``true``, passby presses are enabled.

.. _class_TouchScreenButton_property_pressed:

- :ref:`Texture<class_Texture>` **pressed**

+----------+----------------------------+
| *Setter* | set_texture_pressed(value) |
+----------+----------------------------+
| *Getter* | get_texture_pressed()      |
+----------+----------------------------+

The button's texture for the pressed state.

.. _class_TouchScreenButton_property_shape:

- :ref:`Shape2D<class_Shape2D>` **shape**

+----------+------------------+
| *Setter* | set_shape(value) |
+----------+------------------+
| *Getter* | get_shape()      |
+----------+------------------+

The button's shape.

.. _class_TouchScreenButton_property_shape_centered:

- :ref:`bool<class_bool>` **shape_centered**

+----------+---------------------------+
| *Setter* | set_shape_centered(value) |
+----------+---------------------------+
| *Getter* | is_shape_centered()       |
+----------+---------------------------+

If ``true``, the button's shape is centered.

.. _class_TouchScreenButton_property_shape_visible:

- :ref:`bool<class_bool>` **shape_visible**

+----------+--------------------------+
| *Setter* | set_shape_visible(value) |
+----------+--------------------------+
| *Getter* | is_shape_visible()       |
+----------+--------------------------+

If ``true``, the button's shape is visible.

.. _class_TouchScreenButton_property_visibility_mode:

- :ref:`VisibilityMode<enum_TouchScreenButton_VisibilityMode>` **visibility_mode**

+----------+----------------------------+
| *Setter* | set_visibility_mode(value) |
+----------+----------------------------+
| *Getter* | get_visibility_mode()      |
+----------+----------------------------+

The button's visibility mode. See ``VISIBILITY_*`` constants.

Method Descriptions
-------------------

.. _class_TouchScreenButton_method_is_pressed:

- :ref:`bool<class_bool>` **is_pressed** **(** **)** const

Returns ``true`` if this button is currently pressed.

