.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TextureRect.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureRect:

TextureRect
===========

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Control for drawing textures.

Properties
----------

+--------------------------------------------------+--------------------------------------------------------------+
| :ref:`bool<class_bool>`                          | :ref:`expand<class_TextureRect_property_expand>`             |
+--------------------------------------------------+--------------------------------------------------------------+
| :ref:`StretchMode<enum_TextureRect_StretchMode>` | :ref:`stretch_mode<class_TextureRect_property_stretch_mode>` |
+--------------------------------------------------+--------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                    | :ref:`texture<class_TextureRect_property_texture>`           |
+--------------------------------------------------+--------------------------------------------------------------+

Enumerations
------------

.. _enum_TextureRect_StretchMode:

.. _class_TextureRect_constant_STRETCH_SCALE_ON_EXPAND:

.. _class_TextureRect_constant_STRETCH_SCALE:

.. _class_TextureRect_constant_STRETCH_TILE:

.. _class_TextureRect_constant_STRETCH_KEEP:

.. _class_TextureRect_constant_STRETCH_KEEP_CENTERED:

.. _class_TextureRect_constant_STRETCH_KEEP_ASPECT:

.. _class_TextureRect_constant_STRETCH_KEEP_ASPECT_CENTERED:

.. _class_TextureRect_constant_STRETCH_KEEP_ASPECT_COVERED:

enum **StretchMode**:

- **STRETCH_SCALE_ON_EXPAND** = **0** --- Scale to fit the node's bounding rectangle, only if ``expand`` is ``true``. Default ``stretch_mode``, for backwards compatibility. Until you set ``expand`` to ``true``, the texture will behave like ``STRETCH_KEEP``.

- **STRETCH_SCALE** = **1** --- Scale to fit the node's bounding rectangle.

- **STRETCH_TILE** = **2** --- Tile inside the node's bounding rectangle.

- **STRETCH_KEEP** = **3** --- The texture keeps its original size and stays in the bounding rectangle's top-left corner.

- **STRETCH_KEEP_CENTERED** = **4** --- The texture keeps its original size and stays centered in the node's bounding rectangle.

- **STRETCH_KEEP_ASPECT** = **5** --- Scale the texture to fit the node's bounding rectangle, but maintain the texture's aspect ratio.

- **STRETCH_KEEP_ASPECT_CENTERED** = **6** --- Scale the texture to fit the node's bounding rectangle, center it and maintain its aspect ratio.

- **STRETCH_KEEP_ASPECT_COVERED** = **7** --- Scale the texture so that the shorter side fits the bounding rectangle. The other side clips to the node's limits.

Description
-----------

Used to draw icons and sprites in a user interface. The texture's placement can be controlled with the :ref:`stretch_mode<class_TextureRect_property_stretch_mode>` property. It can scale, tile, or stay centered inside its bounding rectangle.

Property Descriptions
---------------------

.. _class_TextureRect_property_expand:

- :ref:`bool<class_bool>` **expand**

+----------+-------------------+
| *Setter* | set_expand(value) |
+----------+-------------------+
| *Getter* | has_expand()      |
+----------+-------------------+

If ``true``, the texture scales to fit its bounding rectangle. Default value: ``false``.

.. _class_TextureRect_property_stretch_mode:

- :ref:`StretchMode<enum_TextureRect_StretchMode>` **stretch_mode**

+----------+-------------------------+
| *Setter* | set_stretch_mode(value) |
+----------+-------------------------+
| *Getter* | get_stretch_mode()      |
+----------+-------------------------+

Controls the texture's behavior when resizing the node's bounding rectangle. See :ref:`StretchMode<enum_TextureRect_StretchMode>`.

.. _class_TextureRect_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

The node's :ref:`Texture<class_Texture>` resource.

