.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the StaticBody.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_StaticBody:

StaticBody
==========

**Inherits:** :ref:`PhysicsBody<class_PhysicsBody>` **<** :ref:`CollisionObject<class_CollisionObject>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Static body for 3D physics.

Properties
----------

+-----------------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`bounce<class_StaticBody_property_bounce>`                                       |
+-----------------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                 | :ref:`constant_angular_velocity<class_StaticBody_property_constant_angular_velocity>` |
+-----------------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                 | :ref:`constant_linear_velocity<class_StaticBody_property_constant_linear_velocity>`   |
+-----------------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`friction<class_StaticBody_property_friction>`                                   |
+-----------------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`PhysicsMaterial<class_PhysicsMaterial>` | :ref:`physics_material_override<class_StaticBody_property_physics_material_override>` |
+-----------------------------------------------+---------------------------------------------------------------------------------------+

Description
-----------

Static body for 3D physics. A static body is a simple body that is not intended to move. They don't consume any CPU resources in contrast to a :ref:`RigidBody<class_RigidBody>` so they are great for scenario collision.

A static body can also be animated by using simulated motion mode. This is useful for implementing functionalities such as moving platforms. When this mode is active the body can be animated and automatically computes linear and angular velocity to apply in that frame and to influence other bodies.

Alternatively, a constant linear or angular velocity can be set for the static body, so even if it doesn't move, it affects other bodies as if it was moving (this is useful for simulating conveyor belts or conveyor wheels).

Property Descriptions
---------------------

.. _class_StaticBody_property_bounce:

- :ref:`float<class_float>` **bounce**

+----------+-------------------+
| *Setter* | set_bounce(value) |
+----------+-------------------+
| *Getter* | get_bounce()      |
+----------+-------------------+

The body bounciness.

.. _class_StaticBody_property_constant_angular_velocity:

- :ref:`Vector3<class_Vector3>` **constant_angular_velocity**

+----------+--------------------------------------+
| *Setter* | set_constant_angular_velocity(value) |
+----------+--------------------------------------+
| *Getter* | get_constant_angular_velocity()      |
+----------+--------------------------------------+

The constant angular velocity for the body. This does not rotate the body, but affects other bodies that touch it, as if it was in a state of rotation.

.. _class_StaticBody_property_constant_linear_velocity:

- :ref:`Vector3<class_Vector3>` **constant_linear_velocity**

+----------+-------------------------------------+
| *Setter* | set_constant_linear_velocity(value) |
+----------+-------------------------------------+
| *Getter* | get_constant_linear_velocity()      |
+----------+-------------------------------------+

The constant linear velocity for the body. This does not move the body, but affects other bodies that touch it, as if it was in a state of movement.

.. _class_StaticBody_property_friction:

- :ref:`float<class_float>` **friction**

+----------+---------------------+
| *Setter* | set_friction(value) |
+----------+---------------------+
| *Getter* | get_friction()      |
+----------+---------------------+

The body friction, from 0 (frictionless) to 1 (full friction).

.. _class_StaticBody_property_physics_material_override:

- :ref:`PhysicsMaterial<class_PhysicsMaterial>` **physics_material_override**

+----------+--------------------------------------+
| *Setter* | set_physics_material_override(value) |
+----------+--------------------------------------+
| *Getter* | get_physics_material_override()      |
+----------+--------------------------------------+

